<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.comparathor.repository.UserRepository">

    <!-- 游릭 Mapeo de resultados para User -->
    <resultMap id="UserResultMap" type="com.comparathor.model.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="createdAt" column="created_at"/>
        <association property="role" javaType="com.comparathor.model.Role">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
        </association>
    </resultMap>

    <!-- 游댌 Buscar usuarios con filtros y paginaci칩n -->
    <select id="findFilteredUsers" resultMap="UserResultMap">
        SELECT u.id, u.name, u.email, u.password, u.created_at, r.id AS role_id, r.name AS role_name
        FROM users u
        JOIN roles r ON r.id = u.role_id
        WHERE 1=1

        <include refid="UserFilterConditions"/>

        <if test="sortField != null and sortOrder != null">
            ORDER BY
            <choose>
                <when test="sortField == 'name'"> u.name </when>
                <when test="sortField == 'email'"> u.email </when>
                <when test="sortField == 'createdAt'"> u.created_at </when>
                <otherwise> u.created_at </otherwise>
            </choose>
            <choose>
                <when test="sortOrder == 'asc'"> ASC </when>
                <otherwise> DESC </otherwise>
            </choose>
        </if>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 游댌 Buscar usuario por ID -->
    <select id="findById" parameterType="Long" resultMap="UserResultMap">
        SELECT u.id, u.name, u.email, u.password, u.created_at,
               r.id AS role_id, r.name AS role_name
        FROM users u
                 JOIN roles r ON r.id = u.role_id
        WHERE u.id = #{id}
    </select>

    <!-- 游댝 Contar usuarios filtrados -->
    <select id="countFilteredUsers" resultType="int">
        SELECT COUNT(*)
        FROM users u
        JOIN roles r ON r.id = u.role_id
        WHERE 1=1

        <include refid="UserFilterConditions"/>
    </select>

    <!-- 游댌 Buscar usuario por email -->
    <select id="findByEmail" resultMap="UserResultMap">
        SELECT u.id, u.name, u.email, u.password, u.created_at, r.id AS role_id, r.name AS role_name
        FROM users u
                 JOIN roles r ON r.id = u.role_id
        WHERE u.email = #{email}
    </select>

    <!-- 游릭 Crear usuario -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (name, email, password, role_id, created_at, updated_at)
        VALUES (#{name}, #{email}, #{password}, #{roleId, jdbcType=BIGINT}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 游늷 Condiciones reutilizables para filtros -->
    <sql id="UserFilterConditions">
        <if test="roleId != null">
            AND r.id = #{roleId}
        </if>

        <if test="searchTerm != null and searchTerm != ''">
            AND (LOWER(u.name) LIKE LOWER(CONCAT('%', #{searchTerm}, '%'))
            OR LOWER(u.email) LIKE LOWER(CONCAT('%', #{searchTerm}, '%')))
        </if>

        <if test="startDate != null">
            AND u.created_at >= #{startDate}
        </if>

        <if test="endDate != null">
            AND u.created_at &lt;= #{endDate}
        </if>
    </sql>

    <!-- 游댮 Eliminar usuario -->
    <delete id="delete">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <!-- 游댃 Actualizar usuario -->
    <update id="update">
        UPDATE users
        SET name = #{name},
            email = #{email},
            role_id = #{roleId},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 游댃 Actualizar solo la contrase침a -->
    <update id="updatePassword">
        UPDATE users
        SET password = #{password}, updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>
</mapper>
