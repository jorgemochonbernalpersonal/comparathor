<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.comparathor.repository.UserRepository">
    <resultMap id="UserResultMap" type="com.comparathor.model.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="createdAt" column="created_at"/>
        <association property="role" column="role_name" javaType="com.comparathor.model.Role">
            <result property="name" column="role_name"/>
        </association>
    </resultMap>

    <!-- Buscar un usuario por ID -->
    <select id="findById" resultMap="UserResultMap">
        SELECT u.id, u.name, u.email, u.password, u.created_at, r.name AS role_name
        FROM users u
                 JOIN roles r ON r.id = u.role_id
        WHERE u.id = #{id}
    </select>

    <!-- Buscar un usuario por Email -->
    <select id="findByEmail" resultMap="UserResultMap">
        SELECT u.id, u.name, u.email, u.password, u.created_at, r.name AS role_name
        FROM users u
                 JOIN roles r ON r.id = u.role_id
        WHERE u.email = #{email}
    </select>

    <!-- Verificar si existe un usuario con el email -->
    <select id="existsByEmail" resultType="int">
        SELECT COUNT(*) FROM users WHERE email = #{email}
    </select>

    <!-- Guardar un nuevo usuario -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (name, email, password, role_id, created_at, updated_at)
        VALUES (#{name}, #{email}, #{password},
                (SELECT id FROM roles WHERE name = #{role.name}), NOW(), NOW())
    </insert>

    <!-- Buscar usuarios con filtros -->
    <select id="findFilteredUsers" resultMap="UserResultMap">
        SELECT u.id, u.name, u.email, u.password, u.created_at, r.name AS role_name
        FROM users u
        JOIN roles r ON r.id = u.role_id
        WHERE 1=1
        <if test="roleName != null">AND r.name = #{roleName}</if>
        <if test="searchTerm != null and searchTerm != ''">
            AND (LOWER(u.name) LIKE LOWER(CONCAT('%', #{searchTerm}, '%'))
            OR LOWER(u.email) LIKE LOWER(CONCAT('%', #{searchTerm}, '%')))
        </if>
        <if test="startDate != null">AND u.created_at >= #{startDate}</if>
        <if test="endDate != null">AND u.created_at <= #{endDate}</if>
        ORDER BY u.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

</mapper>
