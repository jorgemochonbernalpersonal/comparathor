<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.comparathor.repository.RoleRepository">
    <resultMap id="RoleResultMap" type="com.comparathor.model.Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="roleCreatedBy" column="role_created_by"/>
    </resultMap>
    <select id="findFilteredRoles" resultMap="RoleResultMap">
        SELECT r.id, r.name, r.description, r.created_at, r.updated_at, r.role_created_by
        FROM roles r
        WHERE 1=1
        <if test="roleName != null and roleName != ''">
            AND LOWER(r.name) LIKE LOWER(CONCAT('%', #{roleName}, '%'))
        </if>

        <if test="startDate != null">
            AND r.created_at >= #{startDate}
        </if>

        <if test="endDate != null">
            AND r.created_at &lt;= #{endDate}
        </if>

        <if test="roleCreatedBy != null and roleCreatedBy != ''">
            AND r.role_created_by = #{roleCreatedBy}
        </if>

        <if test="search != null and search != ''">
            AND (
            LOWER(r.name) LIKE LOWER(CONCAT('%', #{search}, '%'))
            OR LOWER(r.description) LIKE LOWER(CONCAT('%', #{search}, '%'))
            OR LOWER(r.role_created_by) LIKE LOWER(CONCAT('%', #{search}, '%'))
            )
        </if>
        <if test="sortField != null and sortOrder != null">
            ORDER BY
            <choose>
                <when test="sortField == 'name'"> r.name </when>
                <when test="sortField == 'description'"> r.description </when>
                <when test="sortField == 'createdAt'"> r.created_at </when>
                <when test="sortField == 'updatedAt'"> r.updated_at </when>
                <otherwise> r.created_at </otherwise>
            </choose>
            <choose>
                <when test="sortOrder == 'asc'"> ASC </when>
                <otherwise> DESC </otherwise>
            </choose>
        </if>
    </select>
    <select id="countFilteredRoles" resultType="int">
        SELECT COUNT(*) FROM roles r
        WHERE 1=1
        <if test="roleName != null and roleName != ''">
            AND LOWER(r.name) LIKE LOWER(CONCAT('%', #{roleName}, '%'))
        </if>

        <if test="startDate != null">
            AND r.created_at >= #{startDate}
        </if>

        <if test="endDate != null">
            AND r.created_at &lt;= #{endDate}
        </if>

        <if test="roleCreatedBy != null and roleCreatedBy != ''">
            AND r.role_created_by = #{roleCreatedBy}
        </if>

        <if test="search != null and search != ''">
            AND (
            LOWER(r.name) LIKE LOWER(CONCAT('%', #{search}, '%'))
            OR LOWER(r.description) LIKE LOWER(CONCAT('%', #{search}, '%'))
            OR LOWER(r.role_created_by) LIKE LOWER(CONCAT('%', #{search}, '%'))
            )
        </if>
    </select>

    <select id="findById" resultMap="RoleResultMap">
        SELECT id, name, description, created_at, updated_at, role_created_by
        FROM roles WHERE id = #{id}
    </select>

    <select id="findByName" resultMap="RoleResultMap">
        SELECT id, name, description, created_at, updated_at, role_created_by
        FROM roles WHERE name = #{name}
    </select>

    <select id="existsById" resultType="int">
        SELECT COUNT(*) FROM roles WHERE id = #{id}
    </select>

    <select id="existsByName" resultType="int">
        SELECT COUNT(*) FROM roles WHERE name = #{name}
    </select>

    <insert id="save" keyProperty="id" keyColumn="id" parameterType="com.comparathor.model.Role">
        INSERT INTO roles (name, description, created_at, updated_at, role_created_by)
        VALUES (#{name}, #{description}, #{createdAt}, #{updatedAt}, #{roleCreatedBy})
            RETURNING id;
    </insert>

    <update id="updateRole">
        UPDATE roles
        SET name = #{name},
        description = #{description},
        updated_at = #{updatedAt},
        role_created_by = #{roleCreatedBy}
        WHERE id = #{id}
    </update>


    <delete id="deleteById">
        DELETE FROM roles WHERE id = #{id}
    </delete>
    <select id="findIdByName" resultType="java.lang.Long">
        SELECT id FROM roles WHERE name = #{name} LIMIT 1
    </select>

</mapper>
